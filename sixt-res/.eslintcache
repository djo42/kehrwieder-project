[{"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\index.js":"1","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\App.js":"2","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\reportWebVitals.js":"3","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\services.js":"4","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Inclusionslist.js":"5","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Components.js":"6","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\Services.js":"7","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\Availability.js":"8","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Filters.js":"9","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Offerform.js":"10","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\AvailabilityDetails.js":"11","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Reservationform.js":"12","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Coverage.js":"13","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\Formtest.js":"14"},{"size":499,"mtime":1610533280786,"results":"15","hashOfConfig":"16"},{"size":1270,"mtime":1611819230781,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":315,"mtime":1611819043033,"results":"19","hashOfConfig":"16"},{"size":4057,"mtime":1611818284937,"results":"20","hashOfConfig":"16"},{"size":6780,"mtime":1611525407854,"results":"21","hashOfConfig":"16"},{"size":321,"mtime":1610108631488,"results":"22","hashOfConfig":"23"},{"size":3149,"mtime":1611819190163,"results":"24","hashOfConfig":"16"},{"size":4642,"mtime":1611773288851,"results":"25","hashOfConfig":"16"},{"size":7551,"mtime":1611429674788,"results":"26","hashOfConfig":"16"},{"size":1627,"mtime":1611769812318,"results":"27","hashOfConfig":"16"},{"size":2726,"mtime":1611732123316,"results":"28","hashOfConfig":"16"},{"size":1077,"mtime":1611819024871,"results":"29","hashOfConfig":"16"},{"size":4285,"mtime":1611819197369,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"q446ma",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"m5tr9v",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\index.js",[],["63","64"],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\App.js",["65","66"],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\reportWebVitals.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\services.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Inclusionslist.js",["67"],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Components.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\Services.js",[],["68","69"],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\Availability.js",["70","71"],"import axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\nimport Filters from '../components/Filters.js'\r\nimport Inclusionslist from '../components/Inclusionslist.js'\r\nimport Offerdataform from '../components/Offerform.js'\r\nimport './Availability.css'\r\n\r\nexport default function Availability() {\r\n  const [list, setList] = useState([])\r\n  const [display, setDisplay] = useState([])\r\n  const [filter, setFilter] = useState({})\r\n  const [total, setTotal] = useState()\r\n\r\n  //Call the API\r\n\r\n  async function callSixt(apiname, parameters) {\r\n    const result = await axios\r\n      .get(`${process.env.REACT_APP_SX_API}${apiname}${parameters}`)\r\n      .catch((error) => console.log(error))\r\n\r\n    //window.sessionStorage.setItem('offer', JSON.stringify(result))\r\n\r\n    //localStorage.setItem('offer', JSON.stringify(result))\r\n    localStorage.removeItem('offer')\r\n    //localStorage.removeItem('sxres')\r\n    //window.sessionStorage.removeItem('offer')\r\n    console.log(localStorage)\r\n\r\n    setList(result.data.Result.Offers)\r\n  }\r\n\r\n  //Transfer API result into dynamic state 'display'\r\n\r\n  useEffect(() => {\r\n    setDisplay(list)\r\n  }, [list])\r\n\r\n  //Reset the car feature filter\r\n\r\n  function resetFilter() {\r\n    setFilter({})\r\n    setDisplay(list)\r\n  }\r\n\r\n  function applyFilter() {\r\n    const filtered = list.filter(function (item) {\r\n      for (var key in filter) {\r\n        if (item.Car[key] === undefined || item.Car[key] !== filter[key])\r\n          return false\r\n      }\r\n      return true\r\n    })\r\n    setDisplay(filtered)\r\n  }\r\n\r\n  function changeFilter(feature) {\r\n    var carfeatures = filter\r\n    const acfilt = carfeatures.hasOwnProperty(feature)\r\n\r\n    acfilt ? delete carfeatures[feature] : (carfeatures[feature] = true)\r\n\r\n    setFilter(carfeatures)\r\n    applyFilter()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Offerdataform handleClick={callSixt} />\r\n      <Filters changeFilter={changeFilter} resetFilter={resetFilter} />\r\n      {display.map((offer, index) => (\r\n        <Card\r\n          className=\"margin-bottom-20\"\r\n          key={offer.AvailabilityRow}\r\n          {...offer}\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={offer.Car.ImageUrl}\r\n            alt={offer.Car.Examples[0]}\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {offer.Car.Examples.join(', ').toUpperCase()}\r\n            </Card.Title>\r\n            <Inclusionslist offer={offer}></Inclusionslist>\r\n            <Card.Text>\r\n              Total Price: {display[index].Total.DueAmount}{' '}\r\n              {display[index].Total.Currency}\r\n            </Card.Text>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={(e) => {\r\n                e.preventDefault()\r\n                window.location.href =\r\n                  '/availabilitydetails/' + offer.AvailabilityRow\r\n              }}\r\n            >\r\n              Rent me\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Filters.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Offerform.js",["72","73"],"import axios from 'axios'\r\nimport '../App.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\n\r\nexport default function Offerdataform({ handleClick }) {\r\n  const initialFormData = Object.freeze({\r\n    uci: '',\r\n    uti: '',\r\n    uda: '',\r\n    rci: '',\r\n    rti: '',\r\n    rda: '',\r\n  })\r\n\r\n  const [formData, updateFormData] = React.useState(initialFormData)\r\n  const [branches, setBranches] = useState([])\r\n\r\n  useEffect(() => {\r\n    getBranches()\r\n  }, [])\r\n\r\n  async function getBranches() {\r\n    const result = await axios\r\n      .get(process.env.REACT_APP_BACKEND + '/db')\r\n      .catch((error) => console.log(error))\r\n\r\n    console.log(result.data)\r\n\r\n    setBranches(result.data)\r\n  }\r\n\r\n  var date1 = new Date()\r\n  var date2 = new Date()\r\n  var start = new Date(date1.setDate(date1.getDate() + 30))\r\n    .toISOString()\r\n    .substr(0, 10)\r\n  var end = new Date(date2.setDate(date2.getDate() + 37))\r\n    .toISOString()\r\n    .substr(0, 10)\r\n\r\n  function serialize(obj) {\r\n    var req = {\r\n      udt: obj.uda + 'T' + obj.uti,\r\n      rdt: obj.rda + 'T' + obj.rti,\r\n      uci: obj.uci,\r\n      rci: obj.rci,\r\n      age: process.env.REACT_APP_SX_AGE1,\r\n      kdnr: process.env.REACT_APP_SX_KDNR1,\r\n      ctyp: 'P',\r\n      wakz: 'KRW',\r\n      posl: 'GB',\r\n    }\r\n    console.log('serialize: ' + req)\r\n\r\n    var str = []\r\n    for (var p in req)\r\n      if (req.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + '=' + encodeURIComponent(req[p]))\r\n      }\r\n\r\n    const querystr = '?' + str.join('&')\r\n\r\n    console.log('availability' + querystr)\r\n\r\n    handleClick('availability', querystr)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    console.log({ [event.target.name]: event.target.value.trim() })\r\n    updateFormData({\r\n      ...formData,\r\n\r\n      // Trimming any whitespace\r\n\r\n      [event.target.name]: event.target.value.trim(),\r\n    })\r\n  }\r\n\r\n  const handleBranchChange = (event, param) => {\r\n    console.log(param)\r\n    console.log({ [param]: event[0].StationID })\r\n    updateFormData({\r\n      ...formData,\r\n\r\n      // Trimming any whitespace\r\n\r\n      [param]: event[0].StationID,\r\n    })\r\n  }\r\n\r\n  console.log(formData)\r\n\r\n  const handleSubmit = (formData) => {\r\n    //formData.preventDefault()\r\n    console.log('handleSubmit: ' + formData)\r\n    serialize(formData)\r\n    // ... submit to API or something\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>Request Form</Card.Title>\r\n          <form onSubmit={(e) => handleSubmit(e)}>\r\n            <div class=\"form-group\">\r\n              <label class=\"lbl-form\" htmlFor=\"uci\">Check-out Branch</label>\r\n              <Typeahead\r\n                single\r\n                clearButton\r\n                id=\"uci\"\r\n                name=\"uci\"\r\n                onChange={(e) => {\r\n                  if (e[0] === undefined || null) {\r\n                  } else {\r\n                    const f = 'uci'\r\n                    handleBranchChange(e, f)\r\n                  }\r\n                }}\r\n                options={branches}\r\n                labelKey={(option) =>\r\n                  `${option.Name} (${option.Address.Country})`\r\n                }\r\n                size=\"default\"\r\n                minLength=\"3\"\r\n                placeholder=\"Check-out branch\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label class=\"lbl-form\" htmlFor=\"rci\">Return Branch</label>\r\n              <Typeahead\r\n                single\r\n                clearButton\r\n                id=\"rci\"\r\n                name=\"rci\"\r\n                onChange={(e) => {\r\n                  if (e[0] === undefined || null) {\r\n                  } else {\r\n                    const f = 'rci'\r\n                    handleBranchChange(e, f)\r\n                  }\r\n                }}\r\n                options={branches}\r\n                labelKey={(option) =>\r\n                  `${option.Name} (${option.Address.Country})`\r\n                }\r\n                size=\"default\"\r\n                minLength=\"3\"\r\n                placeholder=\"Return branch\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group col\">\r\n                <label class=\"lbl-form\" htmlFor=\"uda\">Check-out date</label>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"date\"\r\n                  label=\"Pick-up Date\"\r\n                  key=\"5\"\r\n                  id=\"uda\"\r\n                  name=\"uda\"\r\n                  onChange={handleChange}\r\n                  required={true}\r\n                  placeholder=\"Check-out date\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group col\">\r\n                <label class=\"lbl-form\" htmlFor=\"uti\">Time</label>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"time\"\r\n                  label=\"Pick-up Time\"\r\n                  key=\"5\"\r\n                  id=\"uti\"\r\n                  name=\"uti\"\r\n                  onChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group col\">\r\n                <label class=\"lbl-form\" htmlFor=\"uda\">Return date</label>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"date\"\r\n                  label=\"Return Date\"\r\n                  key=\"5\"\r\n                  id=\"rda\"\r\n                  name=\"rda\"\r\n                  onChange={handleChange}\r\n                  required={true}\r\n                  placeholder=\"Return date\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group col\">\r\n                <label class=\"lbl-form\" htmlFor=\"rti\">Time</label>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"time\"\r\n                  label=\"Return Time\"\r\n                  key=\"5\"\r\n                  id=\"rti\"\r\n                  name=\"rti\"\r\n                  onChange={handleChange}\r\n                  required={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <label class=\"my-1 mr-2 lbl-form\" for=\"inlineFormCustomSelectPref\">\r\n                Please choose your rate\r\n            </label>\r\n            <select\r\n              class=\"custom-select my-1 mr-sm-2\"\r\n              id=\"inlineFormCustomSelectPref\"\r\n            >\r\n              <option selected>Choose...</option>\r\n              <option value=\"1\">One</option>\r\n              <option value=\"2\">Two</option>\r\n              <option value=\"3\">Three</option>\r\n            </select>\r\n\r\n            <div class=\"custom-control custom-checkbox my-1 mr-sm-2\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                id=\"customControlInline\"\r\n              />\r\n              <label class=\"custom-control-label lbl-form\" for=\"customControlInline\">\r\n                Remember my preference\r\n              </label>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-success\"\r\n              onClick={(e) => {\r\n                e.preventDefault()\r\n                console.log(e)\r\n                handleSubmit(formData)\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\AvailabilityDetails.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Reservationform.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Coverage.js",["74"],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\Formtest.js",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":24,"column":9,"nodeType":"86","endLine":24,"endColumn":43},{"ruleId":"80","severity":1,"message":"87","line":24,"column":13,"nodeType":"82","messageId":"83","endLine":24,"endColumn":19},{"ruleId":"76","replacedBy":"88"},{"ruleId":"78","replacedBy":"89"},{"ruleId":"80","severity":1,"message":"90","line":15,"column":10,"nodeType":"82","messageId":"83","endLine":15,"endColumn":15},{"ruleId":"80","severity":1,"message":"91","line":15,"column":17,"nodeType":"82","messageId":"83","endLine":15,"endColumn":25},{"ruleId":"80","severity":1,"message":"92","line":36,"column":7,"nodeType":"82","messageId":"83","endLine":36,"endColumn":12},{"ruleId":"80","severity":1,"message":"93","line":39,"column":7,"nodeType":"82","messageId":"83","endLine":39,"endColumn":10},{"ruleId":"94","severity":1,"message":"95","line":10,"column":6,"nodeType":"96","endLine":10,"endColumn":8,"suggestions":"97"},{"ruleId":"80","severity":1,"message":"98","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logRoles' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'result' is assigned a value but never used.",["99"],["100"],"'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [selected]",{"range":"104","text":"105"},[281,283],"[selected]"]