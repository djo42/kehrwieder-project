[{"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\index.js":"1","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\App.js":"2","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\reportWebVitals.js":"3","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\services.js":"4","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Inclusionslist.js":"5","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Components.js":"6","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\Availability.js":"7","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Filters.js":"8","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Offerform.js":"9","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\Services.js":"10","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\AvailabilityDetails.js":"11"},{"size":493,"mtime":1609113288165,"results":"12","hashOfConfig":"13"},{"size":744,"mtime":1609857195935,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":261,"mtime":1608505987134,"results":"16","hashOfConfig":"17"},{"size":1264,"mtime":1609853657813,"results":"18","hashOfConfig":"13"},{"size":6056,"mtime":1609855877504,"results":"19","hashOfConfig":"13"},{"size":2969,"mtime":1609858757951,"results":"20","hashOfConfig":"13"},{"size":4589,"mtime":1609853122855,"results":"21","hashOfConfig":"13"},{"size":3689,"mtime":1609860464397,"results":"22","hashOfConfig":"13"},{"size":321,"mtime":1609855490122,"results":"23","hashOfConfig":"13"},{"size":806,"mtime":1609860027839,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"m5tr9v",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17epp9p",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\index.js",[],["52","53"],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\App.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\reportWebVitals.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\services.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Inclusionslist.js",["54"],"import React, { useState, useEffect } from 'react'\r\nimport { Toggler, Cardcontainer, Taglist, Tag } from './Components.js'\r\nimport '../App.css'\r\n\r\nexport default function Inclusionslist({ offer }) {\r\n  const [visibility, setVisibility] = useState(false)\r\n\r\n  const handleToggle = () => {\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n  return (\r\n    <Cardcontainer>\r\n      <Toggler onClick={handleToggle}>\r\n        â–¼ Click here to see extras{' '}\r\n        {visibility && (\r\n          <Taglist>\r\n            {offer.Extras.Included.map((item, index) => {\r\n              return (\r\n                <Tag key={index} {...item}>\r\n                  {item.Name}\r\n                </Tag>\r\n              )\r\n            })}\r\n            {offer.Coverages.Included.map((item, index) => {\r\n              return (\r\n                <Tag key={index} {...item}>\r\n                  {item.Name.replace('Collision Damage Waiver', 'CDW') +\r\n                    ' (Excess: ' +\r\n                    Math.floor(item.Excess.Amount).toLocaleString('de-DE') +\r\n                    ' ' +\r\n                    item.Excess.Currency +\r\n                    ')'}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </Taglist>\r\n        )}\r\n      </Toggler>\r\n    </Cardcontainer>\r\n  )\r\n}\r\n","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Components.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\Availability.js",["55"],"import './Availability.css'\r\nimport getSixt from '../Services.js'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Offerdataform from '../components/Offerform.js'\r\nimport axios from 'axios'\r\nimport Filters from '../components/Filters.js'\r\nimport Inclusionslist from '../components/Inclusionslist.js'\r\nimport {\r\n  OfferCardHeadline,\r\n  Card,\r\n  Pricedisplay,\r\n  Button,\r\n  Carpic,\r\n  Textwrapper,\r\n  Imgcontainer,\r\n} from '../components/Components.js'\r\n\r\nexport default function Availability() {\r\n  const [list, setList] = useState([])\r\n  const [display, setDisplay] = useState([])\r\n  const [filter, setFilter] = useState({})\r\n\r\n  //Call the API\r\n\r\n  async function callSixt(apiname, parameters) {\r\n    const result = await axios\r\n      .get(`${process.env.REACT_APP_SX_API}${apiname}${parameters}`)\r\n      .catch((error) => console.log(error))\r\n\r\n    window.sessionStorage.setItem('offer', JSON.stringify(result))\r\n\r\n    console.log(localStorage)\r\n    console.log(sessionStorage)\r\n    console.log(JSON.parse(sessionStorage.offer))\r\n\r\n    setList(result.data.Result.Offers)\r\n  }\r\n\r\n  //Transfer API result into dynamic state 'display'\r\n\r\n  useEffect(() => {\r\n    setDisplay(list)\r\n  }, [list])\r\n\r\n  //Reset the car feature filter\r\n\r\n  function resetFilter() {\r\n    setFilter({})\r\n    setDisplay(list)\r\n    console.log('Display: ' + display)\r\n  }\r\n\r\n  function applyFilter() {\r\n    const filtered = list.filter(function (item) {\r\n      for (var key in filter) {\r\n        if (item.Car[key] === undefined || item.Car[key] !== filter[key])\r\n          return false\r\n      }\r\n      return true\r\n    })\r\n    console.log(filtered)\r\n    setDisplay(filtered)\r\n  }\r\n\r\n  function changeFilter(feature) {\r\n    var carfeatures = filter\r\n    const acfilt = carfeatures.hasOwnProperty(feature)\r\n\r\n    acfilt ? delete carfeatures[feature] : (carfeatures[feature] = true)\r\n\r\n    setFilter(carfeatures)\r\n    console.log(filter)\r\n    applyFilter()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Offerdataform handleClick={callSixt} />\r\n      <Filters changeFilter={changeFilter} resetFilter={resetFilter} />\r\n      {display.map((offer, index) => (\r\n        <Card key={offer.AvailabilityRow} {...offer}>\r\n          <Imgcontainer>\r\n            <OfferCardHeadline>\r\n              <Textwrapper>\r\n                {offer.Car.Examples.join(', ').toUpperCase()}\r\n              </Textwrapper>\r\n            </OfferCardHeadline>\r\n            <Carpic\r\n              src={offer.Car.ImageUrl}\r\n              alt={offer.Car.Examples[0]}\r\n            />\r\n          </Imgcontainer>\r\n          <Inclusionslist offer={offer}></Inclusionslist>\r\n          <Pricedisplay>\r\n            Total Price: {display[index].Total.DueAmount}{' '}\r\n            {display[index].Total.Currency}\r\n          </Pricedisplay>\r\n          <Button onClick={(e) => {\r\n      e.preventDefault();\r\n      window.location.href='/availabilitydetails/' + offer.AvailabilityRow}}>Rent me</Button>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Filters.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\components\\Offerform.js",["56","57"],"import React from 'react'\r\nimport '../App.css'\r\nimport {\r\n  Textwrapper,\r\n  Card,\r\n  Button,\r\n  Headline,\r\n  InputcontainerRow,\r\n  InputcontainerColumn,\r\n  BranchInput,\r\n  DatetimeInput,\r\n  Input,\r\n  Label,\r\n} from '../components/Components'\r\n\r\nexport default function Offerdataform({ handleClick }) {\r\n  const initialFormData = Object.freeze({\r\n    uci: '',\r\n    uti: '',\r\n    uda: '',\r\n    rci: '',\r\n    rti: '',\r\n    rda: '',\r\n  })\r\n\r\n  const [formData, updateFormData] = React.useState(initialFormData)\r\n\r\n  var date1 = new Date()\r\n  var date2 = new Date()\r\n  var start = new Date(date1.setDate(date1.getDate() + 30)).toISOString().substr(0,10);\r\n  var end = new Date(date2.setDate(date2.getDate() + 37)).toISOString().substr(0,10);\r\n  \r\n\r\n  console.log(date2)\r\n\r\n  \r\n\r\n  function serialize(obj) {\r\n    var req = {\r\n      udt: obj.uda + 'T' + obj.uti,\r\n      rdt: obj.rda + 'T' + obj.rti,\r\n      uci: obj.uci,\r\n      rci: obj.rci,\r\n      age: process.env.REACT_APP_SX_AGE1,\r\n      kdnr: process.env.REACT_APP_SX_KDNR3,\r\n      ctyp: 'P',\r\n      wakz: 'KRW',\r\n      posl: 'GB',\r\n    }\r\n    console.log(req)\r\n\r\n    var str = []\r\n    for (var p in req)\r\n      if (req.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + '=' + encodeURIComponent(req[p]))\r\n      }\r\n\r\n    const querystr = '?' + str.join('&')\r\n\r\n    console.log('availability' + querystr)\r\n\r\n    handleClick('availability', querystr)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    updateFormData({\r\n      ...formData,\r\n\r\n      // Trimming any whitespace\r\n      [event.target.name]: event.target.value.trim(),\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(formData)\r\n    serialize(formData)\r\n    // ... submit to API or something\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Textwrapper>\r\n        <Headline>RENTAL DETAILS</Headline>\r\n      </Textwrapper>\r\n      <InputcontainerRow>\r\n        <Input type=\"checkbox\" id=\"agencypp\" name=\"agencypp\" />\r\n        <Label htmlFor=\"agencypp\">Agency Prepaid</Label>\r\n      </InputcontainerRow>\r\n      <InputcontainerColumn>\r\n        <InputcontainerColumn>\r\n          <Label htmlFor=\"cocity\">Pick-up branch</Label>\r\n          <BranchInput\r\n            id=\"cocity\"\r\n            name=\"uci\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n          />\r\n        </InputcontainerColumn>\r\n        <InputcontainerColumn>\r\n          <Label htmlFor=\"cicity\">Return branch</Label>\r\n          <BranchInput\r\n            id=\"cicity\"\r\n            name=\"rci\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n          />\r\n        </InputcontainerColumn>\r\n      </InputcontainerColumn>\r\n\r\n      <InputcontainerRow>\r\n        <InputcontainerColumn>\r\n          <Label htmlFor=\"codat\">Pick-up date</Label>\r\n          <DatetimeInput id=\"codat\" name=\"uda\" type=\"date\" onChange={handleChange}/>\r\n        </InputcontainerColumn>\r\n        <InputcontainerColumn>\r\n          <Label htmlFor=\"cotime\">Pick-up time</Label>\r\n          <DatetimeInput id=\"cotime\" name=\"uti\" type=\"time\" onChange={handleChange} />\r\n        </InputcontainerColumn>\r\n        </InputcontainerRow>\r\n        <InputcontainerRow>\r\n        <InputcontainerColumn>\r\n          <Label htmlFor=\"cidat\">Return date</Label>\r\n          <DatetimeInput id=\"cidat\" name=\"rda\" type=\"date\" onChange={handleChange} />\r\n        </InputcontainerColumn>\r\n        <InputcontainerColumn>\r\n          <Label htmlFor=\"citime\">Return time</Label>\r\n          <DatetimeInput id=\"citime\" name=\"rti\" type=\"time\" onChange={handleChange} />\r\n        </InputcontainerColumn>\r\n        </InputcontainerRow>\r\n\r\n      <Button onClick={handleSubmit}>Send request</Button>\r\n    </Card>\r\n  )\r\n}\r\n","D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\Services.js",[],"D:\\WebDev\\Projects\\kehrwieder-project\\sixt-res\\src\\pages\\AvailabilityDetails.js",["58"],"import axios from 'axios'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nexport default function AvailabilityDetails() {\r\n  let { avrw } = useParams()\r\n\r\n      async function callSixt() {\r\n        const result = await axios\r\n        .get(\r\n          `${\r\n            process.env.REACT_APP_SX_API +\r\n            process.env.REACT_APP_SX_AVAILABILITYDETAILS\r\n          }?avrw=${avrw}`\r\n        )\r\n        .catch((error) => console.log(error))\r\n    \r\n      console.log(result)\r\n\r\n      return result\r\n      }\r\n\r\n      const test = callSixt()\r\n      console.log(test)\r\n\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n      <div>{avrw}</div>\r\n      <form>\r\n          <input id=\"name\"></input>\r\n          <input id=\"lastname\"></input>\r\n          <input id=\"email\"></input>\r\n          \r\n      </form>\r\n\r\n      </>\r\n  )\r\n}\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"67","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":15},{"ruleId":"63","severity":1,"message":"68","line":30,"column":7,"nodeType":"65","messageId":"66","endLine":30,"endColumn":12},{"ruleId":"63","severity":1,"message":"69","line":31,"column":7,"nodeType":"65","messageId":"66","endLine":31,"endColumn":10},{"ruleId":"63","severity":1,"message":"70","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getSixt' is defined but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]